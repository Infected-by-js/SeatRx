generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cinema {
  id              Int              @id @default(autoincrement()) 
  name            String           @db.VarChar(255)             
  color           String           @db.VarChar(7)              
  created_at      DateTime         @default(now()) @db.Timestamptz(6)
  seating_schemes SeatingScheme[] 
}

model SeatingScheme {
  id        Int             @id @default(autoincrement())        
  cinema_id Int                                                  
  name      String          @db.VarChar(255)                    
  created_at DateTime       @default(now()) @db.Timestamptz(6) 
  cinema    Cinema          @relation(fields: [cinema_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  seats     Seat[]                                              
  bookings  Booking[]                                           
}

model Seat {
  id              Int             @id @default(autoincrement())  
  scheme_id       Int                                                 
  x               Int                                                  
  y               Int                                                  
  status          String?         @default("free") @db.VarChar(20)     
  category        String?         @default("regular") @db.VarChar(50)  
  seating_scheme  SeatingScheme?  @relation(fields: [scheme_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Pricing {
  id        Int      @id @default(autoincrement())              
  category  String   @db.VarChar(50)                           
  price     Float                                            
}

model Booking {
  id         Int       @id @default(autoincrement())            
  scheme_id  Int                                                 
  seat_ids   Json                                                
  session_id String                                              
  status     String?   @default("pending") @db.VarChar(20)       
  created_at DateTime  @default(now()) @db.Timestamptz(6)        
  expires_at DateTime? @db.Timestamptz(6)                        
  seating_scheme SeatingScheme @relation(fields: [scheme_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}